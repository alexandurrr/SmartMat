@using smartmat.Data
@using Microsoft.AspNetCore.Identity
@model smartmat.Models.RecipeUserViewModel

@{
    var recipe = Model.Recipes.FirstOrDefault();
    System.Diagnostics.Debug.Assert(recipe != null, nameof(recipe) + " != null");
    ViewData["Title"] = recipe.Title;
}

<style>
    #main {
        text-align: center;
    }
    .tags span {
        font-size: 0.9em;
        border: 1px solid #00000080;
        padding: 0.5em;
        display: inline-block;
        border-radius: 0 1em 1em 1em;
        background-color: #624d4d;
        color: white;
    }
    ul, #instructions {
        text-align: left;
        width: 30em;
        max-width: 100%;
        margin: 1em auto;
    }
    ul {
        list-style-type: none;
        width: 20em;
        padding: 0;
    }
    #background {
        background-image: url("@recipe.ImagePath");
        background-position: center;
        background-size: cover;
        background-repeat: no-repeat;
        width: 100em;
        height: 15em;
        max-width: 100%;
        max-height: 50%;
        box-shadow: 0 0 17px -13px black;
    }
    h1 {
        margin-top: 1em;
    }
    h2 {
        margin: 1em;
    }
    .tags, #bottomLinks {
        margin-top: 1em;
    }
</style>

<div id="background"></div>
<h1>@recipe.Title</h1>
<div>
    @if (recipe.Reviews != null)
    {
        var avg = Math.Round(recipe.Reviews.Average(r => r.Stars)/0.5)*0.5;
        var rest = avg % 1;
        var half = rest > 0;
        @for (var i = 0; i < avg-rest; i++)
        {
            <span class="fa fa-star"></span>
        }
        @if (half)
        {
            <span class="fa fa-star-half-o"></span>
        }
        @for (var i = Math.Round(avg); i < 5; i++)
        {
            <span class="fa fa-star-o"></span>
        }
    }
</div>
<p>Av <a asp-action="ByUser" asp-route-id="@recipe.UserId">@recipe.ApplicationUser.UserName</a> (@(recipe.Visibility == "Public" ? "Offentlig" : "Privat"))</p>
<div class="tags">
    @if (recipe.Category != null)
    {
        <span>@recipe.Category</span>   
    }
    @if (recipe.Glutenfree)
    {
        <span>@Html.DisplayNameFor(model => model.Recipes.FirstOrDefault().Glutenfree)</span>
    }
    @if (recipe.Vegetarian)
    {
        <span>@Html.DisplayNameFor(model => model.Recipes.FirstOrDefault().Vegetarian)</span>
    }
</div>
<div>
    <p>@Html.DisplayNameFor(model => model.Recipes.FirstOrDefault().Time) : <span class="timeBubble @(recipe.Time >= 30 ? "orangeBubble" : "blueBubble")"><span>@recipe.Time</span><br><span class="min">min</span></span></p>
    <p>@recipe.Introduction</p>
    <h2>@Html.DisplayNameFor(model => model.Recipes.FirstOrDefault().Ingredients)</h2>
    <ul>
        @foreach (var ingredient in recipe.Ingredients.Split(", "))
        {
            <li>@ingredient</li>
        }
    </ul>
    <h2>@Html.DisplayNameFor(model => model.Recipes.FirstOrDefault().Instructions)</h2>
    <p id="instructions">@recipe.Instructions</p>
    <h2>@Html.DisplayNameFor(model => model.Recipes.FirstOrDefault().Nutrients)</h2>
    <p>@recipe.Nutrients</p>
</div>
<div id="bottomLinks">
    @inject UserManager<ApplicationUser> _userManager;
    @{
        var user = await _userManager.GetUserAsync(User);
        var userId = (user == null ? "-1" : user.Id);
    }
    @if (recipe.ApplicationUser.Id == userId)
    {
        const string s = "|";
        <a asp-action="Delete" asp-route-id="@recipe.Id">Slett</a> @s
        <a asp-action="Edit" asp-route-id="@recipe.Id">Rediger</a> @s
    }
    
    <a asp-action="Index">Se alle oppskrifter</a>
</div>
